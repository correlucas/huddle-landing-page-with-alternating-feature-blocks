@import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,700;1,400&family=Poppins:wght@600&display=swap');

* {
  margin: 0;
  padding: 0;
  text-decoration: 0;
  box-sizing: border-box;
  transition: all ease 0.2s;
  list-style-type: none;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img {
  max-width: 100%;
  display: block;
  line-height: 0;
}

picture {
  width: 100%;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* remove all button styles */
button {
  all: unset;
  cursor: pointer;
}

body {
  line-height: 1.3;
  text-rendering: optimizeSpeed;
  font-family: 'Open Sans', sans-serif;
  background-color: var(--white);
}

/* colors  */
:root {
  --pink: hsla(322, 100%, 66%, 1);
  --pink-hover: hsla(321, 100%, 80%, 1);
  --black: hsla(192, 100%, 9%, 1);
  --light-blue: hsla(193, 100%, 96%, 1);
  --gray: hsla(208, 11%, 55%, 1);
  --white: rgba(255, 255, 255, 0.96);
}


/* typography */

strong {
  color: var(--black);
}

h1 {
  font-family: 'Poppins';
  font-weight: 600;
  font-size: 40px;
  line-height: 50px;
}

article h1 {
  padding-bottom: 32px;
}

article .body {
  padding-bottom: 40px;
  max-width: 500px;
}

hero-text {
  display: flex;
  align-items: flex-start;
  flex-direction: column;
  justify-content: center;
}

h2 {
  font-family: 'Poppins';
  font-weight: 600;
  font-size: 28px;
  line-height: 42px;
}

.body {
  font-family: 'Open Sans';
  font-weight: 400;
  font-size: 18px;
  line-height: 27px;
  opacity: 70%;
}

/* display */

.flex {
  display: flex;
}

.grid-hero {
  display: grid;
  column-gap: 50px;
  grid-template-columns: 1fr 1fr;
}

.grid {
  display: grid;
  column-gap: 50px;
  grid-template-columns: 1fr 1fr;
  align-items: center;
}



nav {
  padding-top: 68px;
  padding-bottom: 71px;
}

main {
  background-color: var(--light-blue);
  background-image: url(./images/bg-hero-desktop.svg);
  background-size: contain;
  padding-bottom: 72px;
}

.hero-image {
  display: block;
  max-width: 100%;
}

.container {
  margin: 0 auto;
  max-width: 1270px;
  justify-content: space-between;
}

.padding-inline {
  padding-inline: 40px;
}

.card {
  display: flex;
  padding: 40px;
  border-radius: 16px;
  box-shadow: 11px 0px 41px -10px rgba(9, 48, 57, 0.078);
  border: 2px solid rgba(0, 157, 255, 0.092);
  transition: ease-in 0.3s;
  background-color: white;
}

.card:hover {
  border: 2.5px solid var(--pink);
  box-shadow: 11px 0px 30px -10px rgba(18, 72, 84, 0.318);
  transition: ease-in 0.3s;
  filter: saturate(1.5);
}

.card-text {
  padding: 100px;
}

.specs {
  display: flex;
  flex-direction: column;
  gap: 40px;
  padding-block: 120px;
  background-color: #f7fdff;
}

.btn {
  padding: 14px 64px;
  background-color: var(--white);
  border-radius: 50px;
  font-family: 'Open Sans';
  font-weight: 700;
  font-size: 14px;
  line-height: 19px;
  color: black;
  box-shadow: 0px 0px 50px 15px rgba(15, 58, 63, 0.025);
}


/* logo animation */
.logo {
  display: flex;
  gap: 8px;
  transform: translateX(10px);
}

.logo-name {
  order: 2;
  width: 156px;
}

.logo-icon {
  height: 30px;
  transition: ease-in-out 0.7s;
}

.logo-name:hover~.logo-icon,
.logo-icon:hover {
  fill: var(--soft-magenta);
  transform: rotateY(360deg) translate(-3px, -3px);
  transition: ease-in-out 0.7s;
}

svg:hover {
  cursor: pointer;
  fill: var(--soft-magenta);
}